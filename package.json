{
  "name": "sol-exec",
  "displayName": "Solidity execute!",
  "publisher": "7finney",
  "description": "Solidity ABI executions on any EVM supported network",
  "keywords": [
    "solidity",
    "ethereum",
    "blockchain",
    "developer"
  ],
  "license": "MIT",
  "icon": "media/eth.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/7finney/sol-exec"
  },
  "version": "0.0.3",
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "extensionDependencies": [
    "7finney.ethcode"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Solidity execute!"
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "sol-exec-container",
          "title": "Solidity execute",
          "icon": "media/eth.png"
        }
      ]
    },
    "views": {
      "sol-exec-container": [
        {
          "id": "sol-exec.contracts",
          "name": "Contracts"
        },
        {
          "id": "sol-exec.constructor",
          "name": "Constructor",
          "visibility": "collapsed"
        },
        {
          "id": "sol-exec.abis",
          "name": "ABI",
          "visibility": "collapsed"
        },
        {
          "id": "sol-exec.pendingTxn",
          "name": "Pending Transactions"
        }
      ]
    },
    "commands": [
      {
        "command": "sol-exec.refreshContracts",
        "title": "Refresh",
        "icon": "$(extensions-refresh)"
      },
      {
        "command": "sol-exec.editInput",
        "title": "Edit input value",
        "icon": "$(edit)"
      },
      {
        "command": "sol-exec.editConstructorInput",
        "title": "Edit input value",
        "icon": "$(edit)"
      },
      {
        "command": "sol-exec.editContractAddress",
        "title": "Add / edit Constract Address",
        "icon": "$(edit)"
      },
      {
        "command": "sol-exec.sendTransaction",
        "title": "Send transaction",
        "icon": "$(play)"
      },
      {
        "command": "sol-exec.createTransaction",
        "title": "Create Transaction",
        "icon": "$(repo-create)"
      },
      {
        "command": "sol-exec.callContract",
        "title": "Call contract",
        "icon": "$(play)"
      },
      {
        "command": "sol-exec.deployContract",
        "title": "Deploy contract",
        "icon": "$(play)"
      },
      {
        "command": "sol-exec.simulate",
        "title": "Simulate Transaction",
        "icon": "$(beaker)"
      },
      {
        "command": "sol-exec.decode",
        "title": "Decode Transaction",
        "icon": "$(testing-show-as-list-icon)"
      },
      {
        "command": "sol-exec.edit",
        "title": "Edit Transaction",
        "icon": "$(edit)"
      },
      {
        "command": "sol-exec.send",
        "title": "Send Transaction",
        "icon": "$(play)"
      },
      {
        "command": "sol-exec.delete",
        "title": "Delete Transaction",
        "icon": "$(trash)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "sol-exec.refreshContracts",
          "when": "view == sol-exec.contracts",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "sol-exec.editInput",
          "when": "view == sol-exec.abis && viewItem == abiInput",
          "group": "inline"
        },
        {
          "command": "sol-exec.editConstructorInput",
          "when": "view == sol-exec.constructor && viewItem == constructor",
          "group": "inline"
        },
        {
          "command": "sol-exec.editContractAddress",
          "when": "view == sol-exec.contracts && viewItem == contract",
          "group": "inline"
        },
        {
          "command": "sol-exec.deployContract",
          "when": "view == sol-exec.contracts && viewItem == contract",
          "group": "inline"
        },
        {
          "command": "sol-exec.sendTransaction",
          "when": "view == sol-exec.abis && viewItem == abiFunction",
          "group": "inline"
        },
        {
          "command": "sol-exec.createTransaction",
          "when": "view == sol-exec.abis && viewItem == abiFunction",
          "group": "inline"
        },
        {
          "command": "sol-exec.callContract",
          "when": "view == sol-exec.abis && viewItem == abiReadFunction",
          "group": "inline"
        },
        {
          "command": "sol-exec.simulate",
          "when": "view == sol-exec.pendingTxn && viewItem == pendingTransaction",
          "group": "inline"
        },
        {
          "command": "sol-exec.decode",
          "when": "view == sol-exec.pendingTxn && viewItem == Transaction",
          "group": "inline"
        },
        {
          "command": "sol-exec.edit",
          "when": "view == sol-exec.pendingTxn && (viewItem == Transaction || viewItem == DecodedTransaction || viewItem == SimulatedTransaction )  ",
          "group": "inline"
        },
        {
          "command": "sol-exec.send",
          "when": "view == sol-exec.pendingTxn && viewItem == Transaction",
          "group": "inline"
        },
        {
          "command": "sol-exec.delete",
          "when": "view == sol-exec.pendingTxn && (viewItem == Transaction || viewItem == DecodedTransaction || viewItem == SimulatedTransaction )",
          "group": "inline"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.0",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.50.0",
    "@types/ws": "^8.5.4",
    "@typescript-eslint/eslint-plugin": "^4.1.1",
    "@typescript-eslint/parser": "^4.1.1",
    "eslint": "^7.9.0",
    "glob": "^7.1.6",
    "mocha": "^8.1.3",
    "typescript": "^4.0.2",
    "vscode-test": "^1.4.0"
  },
  "dependencies": {
    "bnc-sdk": "^4.6.7",
    "ethers": "5.4.0",
    "ws": "^8.12.1"
  }
}
